module efi{use secondmod;}module secondmod {
	# You can merge external kernel configs by using merge.
	# all merges will be processed before dependencies
	# Values from merged external configs may be overwritten by set statements.
	merge custom.kconf;
	use efi;
	set TEST " #te\"st ";
	# TODO this is an error!
	set TEST #te\"st;
};
module efistub {
	# Module dependencies
	use efi secondmod;

	assert not MODULE_SUPPORT and (A or B);

	#set ONLY_IF_A; # fails if it has missing dependencies
	set EFI;
	set EFI_STUB y;
	#set BOOT_LINE "a string";
	#set BOOT_LINE; # produces an error
}

module luks {
	# Asserts that an expression is true before
	#require MODULE_SUPPORT;

	# Options may be set multiple times, as long as the value is the same.
	#set ONLY_IF_A; # fails if it has missing dependencies
	set EFI;
	set EFI_STUB y;
	#set BOOT_LINE "a string";
	#set BOOT_LINE; # produces an error

	assert not MODULE_SUPPORT and (A or B);
}


include_module_dir /etc/autokernel/modules.d;
include_module /etc/autokernel/modules.d/local;

module base {
	# By default starts with a fresh allnoconfig as the base,
	# but you can merge in as many existing kernel configurations as you like.
	merge "arch/x86/configs/x86_64_defconfig";
}

kernel {
	use base;
	# Enable several modules
	use local;
	use efi;
	#use intel;
	use luks;
	#use security;
	#use usb;

	# Set symbols
	#set HOSTNAME "somehost";

	# Assert expression
	assert HOSTNAME != "lol";
}

initramfs {
	genkernel {
		add_params "--luks";
	}

	# TODO static compile in kernel
	add_cmdline "root=/dev/by-partuuid/{}" "lvm=abc";
	compile_cmdline true;
}

# Appends to previous initramfs section
initramfs {
}

initramfs{} #nope
initramfs{ } #nope
initramfs{; } #nope
initramfs{ ;; } #nope
initramfs { ; } # ok

install {
	efi {
		#add_efi_boot_entry "gentoo";
		#add_efi_boot_entry "gentoo-fallback" "additional.cmdline=something" "even.more=1 yet.another=true";
	}
	target_dir "/boot/efi/EFI";
	target "vmlinuz.efi";
	mount "/boot/efi";
	assert_mounted "/boot/efi";

	#keep_old 1;
	#exec_pre  "/.../pre_install.sh";
	#exec_post "/.../post_install.sh";
}

#TODO build {
#TODO 	pre_check "blah.sh" # check eselect that there is no new version.
#TODO }

# TODO warnings when things get overwritten (configs must not be sensitive to ordering)
